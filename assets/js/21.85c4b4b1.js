(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{572:function(e,t,n){"use strict";n.r(t);var r=n(13),s=Object(r.a)({},(function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[n("p",[e._v("开发中，选择什么集合实现类，主要取决与业务操作特点，然后根据集合实现类特性进行选择，分析如下")]),e._v(" "),n("ol",[n("li",[e._v("先判断存储类型（一组对象【单列】或一组键值【双列】）")]),e._v(" "),n("li",[e._v("一组对象【单列】：Collection接口"),n("br"),e._v("\n(1)允许重复：List"),n("br"),e._v("\n  ①增删多：LinkedList（底层维护了一个双向链表）"),n("br"),e._v("\n  ②改查多ArrayList（底层维护了Object类型的可变数组）"),n("br"),e._v("\n(2)不允许重复：Set"),n("br"),e._v("\n  ①无序：HashSet（底层是HashMap，维护了一个哈希表，即（数组+链表+红黑树））"),n("br"),e._v("\n  ②排序：TreeSet"),n("br"),e._v("\n  ③插入和取出顺序一样：LinkedHashSet，维护数组+双向链表"),n("br")]),e._v(" "),n("li",[e._v("一组键值对：Map"),n("br"),e._v("\n(1)键无序：HashMap（底层哈希表，jdk7：数组+链表，jdk8：数组+链表+红黑树）"),n("br"),e._v("\n(2)键排序TreeMap"),n("br"),e._v("\n(3)键插入和键取出顺序一致：LinkedHashSet"),n("br"),e._v("\n(4)读取文件 Properties"),n("br")])])])}),[],!1,null,null,null);t.default=s.exports}}]);